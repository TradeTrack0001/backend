generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model inventory {
  itemID          Int       @id @default(autoincrement())
  itemName        String
  itemDescription String
  itemQuantity    Int
  itemStatus      Boolean
  itemSize        String
  type            String
  checkInDate     String
  checkOutDate    String    @default("N/A")
  location        String
  workspaceId     Int
  workspace       Workspace @relation(fields: [workspaceId], references: [id])
}

model employee {
  employeeID   Int    @id
  Name         String
  Email        String @unique
  password     String
  CompanyEmail String
  logs         logs[]
}

model logs {
  logId         Int      @id
  employee      employee @relation(fields: [employeeId], references: [employeeID])
  employeeId    Int
  itemID        Int
  QuantityTook  Int
  QuantityAdded Int
}

enum Role {
  USER
  ADMIN
  REALTOR
}

model User {
  id                 String          @id @default(uuid())
  email              String          @unique
  password           String
  name               String?
  role               Role            @default(USER)
  companyEmail       String          @default("")
  workspaces         UserWorkspace[]
  currentWorkspaceId Int?
  currentWorkspace   Workspace?      @relation(fields: [currentWorkspaceId], references: [id], name: "CurrentWorkspace")
}

model Workspace {
  id                    Int             @id @default(autoincrement())
  name                  String
  userWorkspaces        UserWorkspace[]
  inventories           inventory[]
  currentWorkspaceUsers User[]          @relation(name: "CurrentWorkspace")
}

model UserWorkspace {
  id          Int     @id @default(autoincrement())
  userId      String
  workspaceId Int
  isAdmin     Boolean

  user      User      @relation(fields: [userId], references: [id])
  workspace Workspace @relation(fields: [workspaceId], references: [id])

  @@unique([userId, workspaceId])
}
